{"ast":null,"code":"var _jsxFileName = \"/Users/yuris/Desktop/App Academy/Classwork/W11D2/Greenhouse/src/components/Thermometer/Thermometer.js\",\n  _s = $RefreshSig$();\nimport ReactSlider from \"react-slider\";\nimport './Thermometer.css';\nimport { useClimateContext } from \"../../context/ClimateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Thermometer() {\n  _s();\n  const {\n    climateTemperature,\n    setClimateTemperature\n  } = useClimateContext();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thermometer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actual-temp\",\n      children: [\"Actual Temperature: \", currentTemperature, \"\\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      value: climateTemperature,\n      onAfterChange: val => {\n        setClimateTemperature(val);\n      },\n      className: \"thermometer-slider\",\n      thumbClassName: \"thermometer-thumb\",\n      trackClassName: \"thermometer-track\",\n      ariaLabel: \"Thermometer\",\n      orientation: \"vertical\",\n      min: 0,\n      max: 120,\n      renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        children: state.valueNow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 40\n      }, this),\n      renderTrack: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        index: state.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this),\n      invert: true,\n      pearling: true,\n      minDistance: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(Thermometer, \"qCZgWLeoznSzxZG2N3W6BWDPNnw=\", false, function () {\n  return [useClimateContext];\n});\n_c = Thermometer;\nexport default Thermometer;\nvar _c;\n$RefreshReg$(_c, \"Thermometer\");","map":{"version":3,"names":["ReactSlider","useClimateContext","jsxDEV","_jsxDEV","Thermometer","_s","climateTemperature","setClimateTemperature","children","fileName","_jsxFileName","lineNumber","columnNumber","className","currentTemperature","value","onAfterChange","val","thumbClassName","trackClassName","ariaLabel","orientation","min","max","renderThumb","props","state","valueNow","renderTrack","index","invert","pearling","minDistance","_c","$RefreshReg$"],"sources":["/Users/yuris/Desktop/App Academy/Classwork/W11D2/Greenhouse/src/components/Thermometer/Thermometer.js"],"sourcesContent":["import ReactSlider from \"react-slider\";\nimport './Thermometer.css';\nimport { useClimateContext } from \"../../context/ClimateContext\";\n\nfunction Thermometer() {\n  const { climateTemperature, setClimateTemperature } = useClimateContext()\n  \n  return (\n    <section>\n      <h2>Thermometer</h2>\n      <div className=\"actual-temp\">Actual Temperature: {currentTemperature}Â°F</div>\n      <ReactSlider\n        value={climateTemperature}\n        onAfterChange={(val) => {\n          setClimateTemperature(val)\n        }}\n        className=\"thermometer-slider\"\n        thumbClassName=\"thermometer-thumb\"\n        trackClassName=\"thermometer-track\"\n        ariaLabel={\"Thermometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={120}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Thermometer;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,cAAc;AACtC,OAAO,mBAAmB;AAC1B,SAASC,iBAAiB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,kBAAkB;IAAEC;EAAsB,CAAC,GAAGN,iBAAiB,CAAC,CAAC;EAEzE,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBT,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAL,QAAA,GAAC,sBAAoB,EAACM,kBAAkB,EAAC,OAAE;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7ET,OAAA,CAACH,WAAW;MACVe,KAAK,EAAET,kBAAmB;MAC1BU,aAAa,EAAGC,GAAG,IAAK;QACtBV,qBAAqB,CAACU,GAAG,CAAC;MAC5B,CAAE;MACFJ,SAAS,EAAC,oBAAoB;MAC9BK,cAAc,EAAC,mBAAmB;MAClCC,cAAc,EAAC,mBAAmB;MAClCC,SAAS,EAAE,aAAc;MACzBC,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE,GAAI;MACTC,WAAW,EAAEA,CAACC,KAAK,EAAEC,KAAK,kBAAKvB,OAAA;QAAA,GAASsB,KAAK;QAAAjB,QAAA,EAAGkB,KAAK,CAACC;MAAQ;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAE;MACtEgB,WAAW,EAAEA,CAACH,KAAK,EAAEC,KAAK,kBACxBvB,OAAA;QAAA,GAASsB,KAAK;QAAEI,KAAK,EAAEH,KAAK,CAACG;MAAM;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACzC;MACFkB,MAAM;MACNC,QAAQ;MACRC,WAAW,EAAE;IAAE;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACP,EAAA,CA7BQD,WAAW;EAAA,QACoCH,iBAAiB;AAAA;AAAAgC,EAAA,GADhE7B,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}